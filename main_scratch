# main_scratch sections:
# 1: code harnesses
# 2: random bullshit

###############################
#          Section 1          #
###############################
# A: PlottingTools.mulliken_plot
# B: Output Equation for Specific D442 Structure
-------------------------------
# A
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_3/theoretical/"
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "S": "k"}
    pt.mulliken_plot(file, filename="", energyshift=-1.3568, ymin=-1, ymax=4, substate=0, color_dict=cd, eq=True, debug=True)
    # n_3 experimental energyshift: -0.3635
    # n_3 theoretical energyshift:  -1.3568
-------------------------------
# B
    filepath = "../../FHI-aims/KellerPBE/D442/geo_comparison/total_energies/pbe_tight_ts_te"
    x = [0.80, 0.85, 0.90, 0.95, 1.00, 1.05, 1.10, 1.25, 1.50, 2.00]
    with open(filepath, "r") as f:
        lines = []
        for ln in f:
            lines.append(ln)
    i = 439
    order = 5
    y = [float(x) for x in lines[1 + i*11: (i+1)*11]]
    print(bf.minimize_func(bf.fit_poly(x, y, order)))
    print(kp.eq_form(bf.fit_poly(x, y, order)))
-------------------------------

###############################
#          Section 2          #
###############################

file1 = "../../FHI-aims/KellerPBE/all_geometries/xx_1.00.in"
file2 = "../../FHI-aims/KellerPBE/all_geometries/xx_1.50.in"
number = "07"
a = 2
b = 12
file1 = file1.replace("xx", number)
file2 = file2.replace("xx", number)
one = Basic.distance(file1, a, file1, b)
two = Basic.distance(file2, a, file2, b)
print(two/one)

# Fixed Problem Calcs: (D442x10 dataset)
# 3.09.08: 2.00 (pbe_tight_ts) -- fixed by setting charge_mix_param to 0.30
# 3.10.09: 0.85 (min_s, min_s_ts, min_s_1.02_50, min_s_1.00_70, min_s_m4) -- fixed by setting charge_mix_param to 0.30
# 3.10.09: 0.90 (min_s, min_s_ts, min_s_1.09_50, min_s_1.00_70, min_s_m4) -- fixed by setting charge_mix_param to 0.30

# Problem D442x10 Structures (labelled problem if error is greater than 0.50):
# 1.03.03 -- min_s biggest problem
# 1.07.78 -- problem with d>20
# 1.10.11 -- problem with d>20
# 2.05.20 -- min_s_m4 biggest problem
# 2.06.02 -- problem with d>20
# 3.11.08 -- problem with d>20
# 3.12.14 -- min_s_1.02_50 biggest problem
# 4.06.11 -- min_s biggest problem
# 4.16.05 -- problem with d>20
# 4.21.04 -- min_s BIGGEST PROBLEM > 300 !!!!

def min_lowest_quad(x, y):
    points = [[x[i], j] for i, j in enumerate(y)]
    low_1 = [10, 10]
    low_2 = [10, 10]
    low_3 = [10, 10]
    low_4 = [10, 10]
    low_5 = [10, 10]
    low_6 = [10, 10]
    for count, point in enumerate(points):
        if pt[1] < low_1[1]:
            low_6 = low_5
            low_5 = low_4
            low_4 = low_3
            low_3 = low_2
            low_2 = low_1
            low_1 = pt
        elif pt[1] < low_2[1]:
            low_6 = low_5
            low_5 = low_4
            low_4 = low_3
            low_3 = low_2
            low_2 = pt
        elif pt[1] < low_3[1]:
            low_6 = low_5
            low_5 = low_4
            low_4 = low_3
            low_3 = pt
        elif pt[1] < low_4[1]:
            low_6 = low_5
            low_5 = low_4
            low_4 = pt
        elif pt[1] < low_5[1]:
            low_6 = low_5
            low_5 = pt
        elif pt[1] < low_6[1]:
            low_6 = pt
    x_min = [low_1[0], low_2[0], low_3[0]]
    y_min = [low_1[1], low_2[1], low_3[1]]
    res = bf.minimize_func(bf.fit_poly(x_min, y_min, 2))
    print(eq_form(bf.fit_poly(x_min, y_min, 2)))
    print(res)
    if res < 0.8 or res > 1.2 or True:
        x_min.append(low_4[0])
        y_min.append(low_4[1])
        res = bf.minimize_func(bf.fit_poly(x_min, y_min, 3))
        print(eq_form(bf.fit_poly(x_min, y_min, 3)))
        print(res)
    if res < 0.8 or res > 1.2 or True:
        x_min.append(low_5[0])
        y_min.append(low_5[1])
        res = bf.minimize_func(bf.fit_poly(x_min, y_min, 4))
        print(eq_form(bf.fit_poly(x_min, y_min, 4)))
        print(res)
    if res < 0.8 or res > 1.2 or True:
        x_min.append(low_6[0])
        y_min.append(low_6[1])
        res = bf.minimize_func(bf.fit_poly(x_min, y_min, 5))
        print(eq_form(bf.fit_poly(x_min, y_min, 5)))
        print(res)
    return res

x = [0.80, 0.85, 0.90, 0.95, 1.00, 1.05, 1.10, 1.25, 1.50, 2.00]
y = [0.02140002698, 0.007480526983, -0.001020163007, -0.006705705018, -0.003773087024, -0.00201533502, -0.003865128034, 0.002481656993, -0.0002937420213, 0.0004280509893]
kp.min_lowest_quad(x, y)

    for a in at:
        i = 0
        at_ret.append([a[0], a[1], a[2]])
        for x in a:
            if x < 0:
                count += 1
                at_ret[j][0] += lv[i][0]
                at_ret[j][1] += lv[i][1]
                at_ret[j][2] += lv[i][2]
            if x > lv[i][i]:
                count += 1
                at_ret[j][0] -= lv[i][0]
                at_ret[j][1] -= lv[i][1]
                at_ret[j][2] -= lv[i][2]
            i += 1
        j += 1

base = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_5/geo_exp.in"
opt1 = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_5/geo_exp_b.in"
opt2 = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_5/geo_exp_bb.in"
opt3 = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_5/geo_exp_bbb.in"
opt4 = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_5/geo_exp_bbbb.in"

bg.move_into_unit_cell(base, opt1)
bg.move_into_unit_cell(opt1, opt2)
bg.move_into_unit_cell(opt2, opt3)
bg.move_into_unit_cell(opt3, opt4)

structure = 1
# n_2_4 experimental:
if structure == 0:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_2_4/experimental/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_2_4_experimental.png"
    eshift = -2.2702
    ymin = -1
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "S": "k"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|1$', '$4\|\Gamma$', '$5$')
    title = "Experimental m=4, n=2"
    equal = True
    debug = False
# n_2_4 theoretical:
if structure == 1:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_2_4/theoretical/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_2_4_theoretical.png"
    eshift = -2.2211
    ymin = -1
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "S": "k"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|1$', '$4\|\Gamma$', '$5$')
    title = "Theoretical m=4, n=2"
    equal = True
    debug = False

# n_3 experimental:
if structure == 2:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_3/experimental/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_3_experimental.png"
    eshift = -0.3635
    ymin = -4
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "S": "k"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|\Gamma$', '$4\|3$', '$5\|\Gamma$', '$6$')
    title = "Experimental m=3, n=3"
    equal = True
    debug = False
# n_3 theoretical:
if structure == 3:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_3/theoretical/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_3_theoretical.png"
    eshift = -1.3568
    ymin = -1
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "S": "k"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|\Gamma$', '$4\|3$', '$5\|\Gamma$', '$6$')
    title = "Theoretical m=3, n=3"
    equal = True
    debug = False

# n_4 experimental:
if structure == 4:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_4/experimental/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_4_experimental.png"
    eshift = -1.2848
    ymin = -1
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "F": "k"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|\Gamma$', '$4\|\Gamma$', '$5$')
    title = "Experimental m=4, n=4"
    equal = True
    debug = False
# n_4 theoretical:
if structure == 5:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_4/theoretical/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_4_theoretical.png"
    eshift = -1.3466
    ymin = -1
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "F": "k"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|\Gamma$', '$4\|\Gamma$', '$5$')
    title = "Theoretical m=4, n=4"
    equal = True
    debug = False

# n_5 experimental:
if structure == 6:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_5/experimental/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_5_experimental.png"
    eshift = -2.0580
    ymin = -1
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "S": "k", "O": "r"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|\Gamma$', '$4\|\Gamma$', '$5\|3$', '$6$')
    title = "Experimental m=5, n=5"
    equal = True
    debug = False
# n_5 theoretical:      (NOT DONE)
if structure == 7:
    file = "../../FHI-aims/Yi_1_5_D/Results/New_Results/n_5/theoretical/"
    figure_loc = "../../FHI-aims/Yi_1_5_D/Results/Figures/New_Figures/n_5_theoretical.png"
    eshift = 0
    ymin = -4
    ymax = 4
    substate = 0
    cd = {"Pb": "m", "I": "g", "N": "b", "C": "y", "H": "c", "S": "k", "O": "r"}
    labels = ('$1$', '$\Gamma$', '$2\|\Gamma$', '$3\|\Gamma$', '$4\|\Gamma$', '$5\|3$', '$6$')
    title = "Theoretical m=5, n=5"
    equal = True
    debug = False

pt.mulliken_plot(file, filename=figure_loc, energyshift=eshift, ymin=ymin, ymax=ymax, substate=substate,
           color_dict=cd, labels=labels, title=title, eq=equal, debug=debug)
Geometry.bandProcess(file + "band1001.out", True, 0)
